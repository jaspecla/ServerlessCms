name: Build and Deploy CMS Azure Functions

on:
  push:
    branches: [ master ]
    paths:
      - 'ServerlessCms.DTO/**'
      - 'ServerlessCms.Functions/**'
      - 'ServerlessCms.Data/**'
      - '.github/workflows/functions.yml'
 
  pull_request:
    branches: [ master ]
    paths:
      - 'ServerlessCms.DTO/**'
      - 'ServerlessCms.Functions/**'
      - 'ServerlessCms.Data/**'
      - '.github/workflows/functions.yml'

jobs:
  build:
    env:
      FUNCTIONS_PROJECT_PATH: './ServerlessCms.Functions/ServerlessCms.Functions.csproj'

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.301
    - name: Show Dir
      run: dir
    - name: Install dependencies
      run: dotnet restore ${{ env.FUNCTIONS_PROJECT_PATH }}
    - name: Build
      run: dotnet build ${{ env.FUNCTIONS_PROJECT_PATH }} --configuration Release --no-restore
    - name: Test
      run: dotnet test ${{ env.FUNCTIONS_PROJECT_PATH }} --no-restore --verbosity normal
    - name: Publish
      run: dotnet publish ${{ env.FUNCTIONS_PROJECT_PATH }} --configuration Release -o cms_functions
      
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    - name: Azure Functions Action
      uses: Azure/functions-action@v1.1.6
      with:         
        app-name: serverless-cms-dev
        package: './cms_functions'

    - name: "Set Function App Service Settings"
      uses: azure/appservice-settings@v1
      with:
        app-name: 'serverless-cms-dev'
        app-settings-json: >-
          [
          {"name": "CosmosDbConnectionString", "value": "${{ secrets.COSMOS_DB_CONNECTION_STRING }}", "slotSetting": false},
          {"name": "ServiceBusConnectionString", "value": "${{ secrets.SERVICE_BUS_CONNECTION_STRING }}", "slotSetting": false},
          {"name": "ContentModerationQueueName", "value": "${{ secrets.CONTENT_MODERATION_QUEUE_NAME }}", "slotSetting": false},
          {"name": "ContentModeratorSubscriptionKey", "value": "${{ secrets.CONTENT_MODERATOR_SUBSCRIPTION_KEY }}", "slotSetting": false},
          {"name": "ContentModeratorEndpoint", "value": "${{ secrets.CONTENT_MODERATOR_ENDPOINT }}", "slotSetting": false},
          {"name": "ImageStorageAccountName", "value": "${{ secrets.IMAGE_STORAGE_ACCOUNT_NAME }}", "slotSetting": false},
          {"name": "ImageStorageAccountKey", "value": "${{ secrets.IMAGE_STORAGE_ACCOUNT_KEY }}", "slotSetting": false},
          {"name": "ImageStorageBlobContainerName", "value": "${{ secrets.IMAGE_STORAGE_BLOB_CONTAINER_NAME }}", "slotSetting": false}
          ]
      id: settings

